%> @file  QuadratureRange.m
%> @brief QuadratureRange class definition.
% ===========================================================================
%> @brief Abu-Shumay's quadruple range quadrature.
%
%> See Abu-Shumays, I. K. "Compatible Product Angular Quadrature for
%>     Neutron  Transport in xy Geometry," Nucl. Sci. Engr., 64, (1978)
% ===========================================================================
classdef QuadrupleRange < Quadrature

    properties (Access = private)
        %> Quadrature order (specific to these product quadratures)
        d_L = 0;
    end
    
    methods
        
        
        % ======================================================================
        %> @brief Class constructor
        %>
        %> More detailed description of what the constructor does.
        %>
        %> @param order         Quadrature order. This differs from quadrature 
        %>                      to quadrature, but e.g. for level symmetric, 
        %>                      it's the number of unique directional cosines.
        %>
        %> @return Instance of the QuadrupleRange class.
        % ======================================================================
        function this = QuadrupleRange(order)
            this = this@Quadrature(order, 2); % Call base class.
            this.d_order = order;            % Set order.
            
            % Get data from an old table function.
            [this.d_mu, this.d_eta, this.d_weights, this.d_L] = ...
                quad_range_table(order);
            this.d_number_angles = length(this.d_weights);
        end
        
        function n = number_azimuth(this)
            n = sqrt(this.d_order/2)*2;
        end
        
        function n = number_polar(this)
            n = sqrt(this.d_order/2);
        end
  
    end
    
    methods (Access = private)
       

    end
    
end

function [mu,eta,w,L] = quad_range_table(N)
% function [mu,eta,w] = level_sym_table(N)
%   Returns Abu-Shumays' Symmetric Quadruple-Range Quadrature
%  
%   Reference:
%     Abu-Shumays, I.K., "Compatible Product Angular Quadrature for 
%           Neutron Transport in x-y Geometry", NSE, 64 (1977)
%     Roberts, J.A., "High Order, High Precision Evaluations of the
%           Symmetric Quadruple-Range Quadrature", unpublished note

    if N == 2   	% N=3.12 (same number of angles as LevelSym of order N)
        L = 1;
        v = [...
                2.58287076195660450493134e-01    7.41712923804339549506866e-01     1.57079632679489661923132e+00   
                7.41712923804339549506866e-01    2.58287076195660450493134e-01     1.57079632679489661923132e+00 ];  
%         v = [  0.5 0.5  pi/2
%                0.5 0.5  pi/2 ];

    elseif N == 8   % N=7.06
        L = 3;
        v = [...
                4.46976567552685291442200e-02    3.96864413885541210035759e-01     1.39829431524808231013885e-01   
                1.02344482002639025620492e-01    9.08702733272681703905853e-01     4.18269587013405891181035e-01   
                1.99290928999251676505196e-01    3.46095895882544646430440e-01     2.53727177824340569108921e-01   
                4.56317587472837769700214e-01    7.92457765320398675821495e-01     7.58970130432341927927481e-01   
                3.46095895882544646430440e-01    1.99290928999251676505196e-01     2.53727177824340569108921e-01   
                7.92457765320398675821495e-01    4.56317587472837769700214e-01     7.58970130432341927927481e-01   
                3.96864413885541210035759e-01    4.46976567552685291442200e-02     1.39829431524808231013885e-01   
                9.08702733272681703905853e-01    1.02344482002639025620492e-01     4.18269587013405891181035e-01 ];     

    elseif N == 18  % N=11.04
        L = 5;
        v = [...
                1.27093041690748155694790e-02    2.30802637750809193462514e-01     2.37121323934635538907957e-02   
                3.51871416751388519299383e-02    6.39003127590160553427465e-01     9.49188485831943760573218e-02   
                5.24805072144006166981908e-02    9.53052923625619995600235e-01     1.59351473226513713102283e-01   
            	6.20979226006269823776510e-02    2.22654961799372115756726e-01     4.86188761090185710082652e-02   
            	1.71925100793234923074317e-01    6.16445367998259285588520e-01     1.94619685108925141259031e-01   
            	2.56420841903473935418474e-01    9.19408739737847086915978e-01     3.26731033971669280346808e-01   
            	1.30802459402494105755753e-01    1.90583579091830985658436e-01     6.16592124662982190358168e-02   
                3.62141357955020575098610e-01    5.27652128648948934507013e-01     2.46819702029872918506821e-01   
             	5.40122364136765207184737e-01    7.86976435878568238025202e-01     4.14365362905940846024180e-01   
            	1.90583579091830985658436e-01    1.30802459402494105755753e-01     6.16592124662982190358168e-02   
                5.27652128648948934507013e-01    3.62141357955020575098610e-01     2.46819702029872918506821e-01   
             	7.86976435878568238025202e-01    5.40122364136765207184737e-01     4.14365362905940846024180e-01   
             	2.22654961799372115756726e-01    6.20979226006269823776510e-02     4.86188761090185710082652e-02   
                6.16445367998259285588520e-01    1.71925100793234923074317e-01     1.94619685108925141259031e-01   
            	9.19408739737847086915978e-01    2.56420841903473935418474e-01     3.26731033971669280346808e-01   
              	2.30802637750809193462514e-01    1.27093041690748155694790e-02     2.37121323934635538907957e-02   
             	6.39003127590160553427465e-01    3.51871416751388519299383e-02     9.49188485831943760573218e-02   
                9.53052923625619995600235e-01    5.24805072144006166981908e-02     1.59351473226513713102283e-01 ];     

    elseif N == 32  % N=15.03
        L = 7;
        v = [...
                4.84865386755284740971726e-03    1.49170366723694487208718e-01     5.95624062302719324968259e-03   
              	1.44637686913213988466785e-02    4.44982409309420062054082e-01     2.72781777699681592264424e-02   
             	2.48759253873005315824064e-02    7.65315696681752703594352e-01     5.59834468070514926458620e-02   
              	3.15721579934219848830777e-02    9.71327406489868938691973e-01     7.60033105836691651890701e-02   
              	2.44695851778978578329022e-02    1.47229572960157825176683e-01     1.28346172395707640161942e-02   
              	7.29939545394541728136562e-02    4.39192927766675674865940e-01     5.87795209812346946543055e-02   
              	1.25540736000361158673930e-01    7.55358491615629269227945e-01     1.20634164567245606433238e-01   
             	1.59334452483819739492759e-01    9.58689868523902820858765e-01     1.63773336575821182194088e-01   
            	5.52278465278413962612416e-02    1.38654941205519364636138e-01     1.76908686414215762435655e-02   
              	1.64747333861894637168226e-01    4.13614387062357544504607e-01     8.10200074590991979893719e-02   
              	2.83345404117546700297958e-01    7.11366508360363559986521e-01     1.66278675802422910707128e-01   
             	3.59617812251364111731915e-01    9.02855891529893777852878e-01     2.25740474394316425562698e-01   
             	8.96418233624855259680271e-02    1.19330009876215877726838e-01     2.01456449438465409434366e-02   
              	2.67405889057134178798971e-01    3.55967183455351606778913e-01     9.22623041695737158035635e-02   
              	4.59905650198994901866063e-01    6.12220319955480397848446e-01     1.89351423739891711707811e-01   
              	5.83705475236828030184132e-01    7.77021009971574337618832e-01     2.57064112496736282664863e-01   
             	1.19330009876215877726838e-01    8.96418233624855259680271e-02     2.01456449438465409434366e-02   
              	3.55967183455351606778913e-01    2.67405889057134178798971e-01     9.22623041695737158035635e-02   
              	6.12220319955480397848446e-01    4.59905650198994901866063e-01     1.89351423739891711707811e-01   
              	7.77021009971574337618832e-01    5.83705475236828030184132e-01     2.57064112496736282664863e-01   
              	1.38654941205519364636138e-01    5.52278465278413962612416e-02     1.76908686414215762435655e-02   
              	4.13614387062357544504607e-01    1.64747333861894637168226e-01     8.10200074590991979893719e-02   
              	7.11366508360363559986521e-01    2.83345404117546700297958e-01     1.66278675802422910707128e-01   
              	9.02855891529893777852878e-01    3.59617812251364111731915e-01     2.25740474394316425562698e-01   
              	1.47229572960157825176683e-01    2.44695851778978578329022e-02     1.28346172395707640161942e-02   
              	4.39192927766675674865940e-01    7.29939545394541728136562e-02     5.87795209812346946543055e-02   
              	7.55358491615629269227945e-01    1.25540736000361158673930e-01     1.20634164567245606433238e-01   
              	9.58689868523902820858765e-01    1.59334452483819739492759e-01     1.63773336575821182194088e-01   
              	1.49170366723694487208718e-01    4.84865386755284740971726e-03     5.95624062302719324968259e-03   
              	4.44982409309420062054082e-01    1.44637686913213988466785e-02     2.72781777699681592264424e-02   
              	7.65315696681752703594352e-01    2.48759253873005315824064e-02     5.59834468070514926458620e-02   
              	9.71327406489868938691973e-01    3.15721579934219848830777e-02     7.60033105836691651890701e-02 ];  
            
    elseif N == 50  % N=19.02
        L = 9;
        v = [...
              	2.22512555496971569531120e-03    1.03923086819525939997089e-01    1.92746657569833023326533e-03    
              	6.89070423895247740610388e-03    3.21825999109555867138856e-01    9.52891618610322775265370e-03    
              	1.26846449763671556670779e-02    5.92428350036098868322305e-01    2.17724898579265136904049e-02    
              	1.79119376764333005811578e-02    8.36565761467446920504346e-01    3.41500398735881298488682e-02    
             	2.09970042832404971220238e-02    9.80651853197047378729264e-01    4.18187560610755956875228e-02    
              	1.14007103278552501994460e-02    1.03319809145460775350123e-01    4.25989570377409088684875e-03    
              	3.53053888612099734543382e-02    3.19957786317400505550467e-01    2.10598666843796208424150e-02    
              	6.49913721337016715980557e-02    5.88989279777526738937832e-01    4.81194004480429913567163e-02    
              	9.17740629977134105670212e-02    8.31709463774355197019602e-01    7.54750354560651580019864e-02    
              	1.07580789340769972896086e-01    9.74959129980580599701943e-01    9.24236723623653027101776e-02    
              	2.65486921403882728335720e-02    1.00499383597457906938484e-01    6.12321369017500093779565e-03    
              	8.22152192993476373770020e-02    3.11223574337376870907913e-01    3.02716481722324207191713e-02    
              	1.51344598796034078357201e-01    5.72911042448946381550795e-01    6.91672735849909052194119e-02    
              	2.13713117422680223693560e-01    8.09005447578947656238517e-01    1.08488517679335727654890e-01    
              	2.50522044179099265227720e-01    9.48344682458861694091456e-01    1.32850645945179756279059e-01    
              	4.53204951873411766909521e-02    9.35468432060018296898459e-02    7.39060605310626974149787e-03    
              	1.40347194162303131279197e-01    2.89693149036254147482166e-01    3.65373213380064496519695e-02    
              	2.58355934262057064993338e-01    5.33277096241954320509609e-01    8.34836242371089730524251e-02    
              	3.64823406682684438966615e-01    7.53038506789244057580887e-01    1.30943641039336311089022e-01    
              	4.27658848033020039572607e-01    8.82738263058050551393669e-01    1.60348280782188791654060e-01    
              	6.46299015181292199790683e-02    8.14121304695499526062021e-02    8.02521046536785048240247e-03    
              	2.00144003271813303529677e-01    2.52114722819007452509199e-01    3.96746479884470739328974e-02    
              	3.68431953776289052271752e-01    4.64101438891604137708977e-01    9.06520588569180082196810e-02    
              	5.20261324328958281516530e-01    6.55355830963921622823340e-01    1.42187294369530200003618e-01    
              	6.09868650319842372843616e-01    7.68231189632865407655121e-01    1.74116803383953919582561e-01    
              	8.14121304695499526062021e-02    6.46299015181292199790683e-02    8.02521046536785048240247e-03    
              	2.52114722819007452509199e-01    2.00144003271813303529677e-01    3.96746479884470739328974e-02    
              	4.64101438891604137708977e-01    3.68431953776289052271752e-01    9.06520588569180082196810e-02    
              	6.55355830963921622823340e-01    5.20261324328958281516530e-01    1.42187294369530200003618e-01    
            	7.68231189632865407655121e-01    6.09868650319842372843616e-01    1.74116803383953919582561e-01    
             	9.35468432060018296898459e-02    4.53204951873411766909521e-02    7.39060605310626974149787e-03    
            	2.89693149036254147482166e-01    1.40347194162303131279197e-01    3.65373213380064496519695e-02    
             	5.33277096241954320509609e-01    2.58355934262057064993338e-01    8.34836242371089730524251e-02    
              	7.53038506789244057580887e-01    3.64823406682684438966615e-01    1.30943641039336311089022e-01    
             	8.82738263058050551393669e-01    4.27658848033020039572607e-01    1.60348280782188791654060e-01    
              	1.00499383597457906938484e-01    2.65486921403882728335720e-02    6.12321369017500093779565e-03    
              	3.11223574337376870907913e-01    8.22152192993476373770020e-02    3.02716481722324207191713e-02    
             	5.72911042448946381550795e-01    1.51344598796034078357201e-01    6.91672735849909052194119e-02    
             	8.09005447578947656238517e-01    2.13713117422680223693560e-01    1.08488517679335727654890e-01    
             	9.48344682458861694091456e-01    2.50522044179099265227720e-01    1.32850645945179756279059e-01    
             	1.03319809145460775350123e-01    1.14007103278552501994460e-02    4.25989570377409088684875e-03    
                3.19957786317400505550467e-01    3.53053888612099734543382e-02    2.10598666843796208424150e-02    
             	5.88989279777526738937832e-01    6.49913721337016715980557e-02    4.81194004480429913567163e-02    
            	8.31709463774355197019602e-01    9.17740629977134105670212e-02    7.54750354560651580019864e-02    
             	9.74959129980580599701943e-01    1.07580789340769972896086e-01    9.24236723623653027101776e-02    
              	1.03923086819525939997089e-01    2.22512555496971569531120e-03    1.92746657569833023326533e-03    
              	3.21825999109555867138856e-01    6.89070423895247740610388e-03    9.52891618610322775265370e-03    
              	5.92428350036098868322305e-01    1.26846449763671556670779e-02    2.17724898579265136904049e-02    
              	8.36565761467446920504346e-01    1.79119376764333005811578e-02    3.41500398735881298488682e-02    
              	9.80651853197047378729264e-01    2.09970042832404971220238e-02    4.18187560610755956875228e-02 ]; 
            
    else
        error('Invalid order for QuadrupleRange quadrature')
        
    end
    mu  = [ v(:, 1); -v(:, 1); -v(:, 1);  v(:, 1)];
    eta = [ v(:, 2);  v(:, 2); -v(:, 2); -v(:, 2)];
    w   = [ v(:, 3);  v(:, 3);  v(:, 3);  v(:, 3)];
    
end